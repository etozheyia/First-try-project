# Дан текст: в первой строке записано количество строк в тексте, а затем сами строки. Выведите все слова,
# встречающиеся в тексте, по одному на каждую строку. Слова должны быть отсортированы по убыванию их количества
# появления в тексте, а при одинаковой частоте появления — в лексикографическом порядке.
#
# Указание. После того как вы создадите словарь всех слов, вам захочется отсортировать его по частоте
# встречаемости слова. Желаемого можно добиться, если создать список, элементами которого будут кортежи из
# двух элементов: частота встречаемости слова и само слово. Например, [(2, 'hi'), (1, 'what'), (3, 'is')].
# Тогда стандартная сортировка будет сортировать список кортежей, при этом кортежи сравниваются по первому элементу,
# а если они равны — то по второму. Это почти то, что требуется в задаче.

from collections import Counter  # эта строка из альтернативного решения, просто ей надо быть здесь, сверху

text = {}  # основное решение начинается с этой строки
for i in range(int(input())):
    line = input().split()
    for word in line:
        text[word] = text.get(word, 0) + 1

pairs = [(val, key) for key, val in text.items()]
pairs = sorted(pairs, key=lambda x: (-x[0], x[1]))
for value in pairs:
    print(value[1])


# альтернативное решение
words = []
for _ in range(int(input())):
    words.extend(input().split())

counter = Counter(words)
pairs = [(-pair[1], pair[0]) for pair in counter.most_common()]
words = [pair[1] for pair in sorted(pairs)]
print('\n'.join(words))
